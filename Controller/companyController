const path = require("path");
const { companyModel } = require("../Models/companyModel");
const { reviewModel } = require("../Models/reviewModel");


const createcompany = async (req, res) => {
  console.log(req.body,req.file)

  let oldCompany = await companyModel.findOne({ companyName: req.body.companyName})
  if(oldCompany){return res.status(400).send({success:false,message:"Company Already exist"})}

  let fileLocation = path.join( __dirname,`../${req.file.destination + req.file.filename}`)
  let newcompany = await companyModel.create({...req.body, company_logo: fileLocation,})
  res.status(201).send({ success: true, message: "Company Created", data: newcompany })
}

// const createcompany = async (req, res) => {
//     const company = await companyModel.findOne({companyName:req.body.companyName})
//     if(company){
//       return res.send('Company already exist')
      
//     }
//     let fileLocation = path.join( __dirname,`../${req.file.destination + req.file.filename}`)
//     const createdCompany = await new companyModel({...req.body, company_logo: fileLocation})
//     let newcompany = createdCompany.save();
//     res.send(newcompany)
// }

const companylist = async (req, res) => {
  let allcompany = await companyModel.find().sort({"_id":-1}).populate("userId")
  if (allcompany.length == 0) {return res.status(404).send({ success: false, message: "no company found" })}
  res.status(200).send({success: true, message: "all company", total_company: allcompany.length, data: allcompany})
}



const singleCompany1 = async (req, res) => {
  // console.log(req.params);
  try {
    let company = await companyModel.findById(req.params.id).populate("userId")
    if (!company) { return res.status(404) .send({ success: false, message: "No Company Found" });}
   let allreview = await reviewModel.find({company_id:req.params.id}).populate("user_id")
    res .status(200).send({success: true, message: "Company Found", data: company,allreview:allreview,TotalReviews:allreview.length })
  
  } catch (error) {
    res.status(500).send({ success: false, message: "catch data", data: error.message })
  }
}

 

    const deleteCompany = async(req, res) => {
      console.log(req)
      try{
      const company = await companyModel.findById(req.params.id);
      if (!company) {return res.status(200).send({ success: true, message: 'Company dosent exist' })};
    if(req.userID != company.userID){return res.status(400).send({success:false,message:"not authorized"})}

      await companyModel.findByIdAndDelete(company._id)
      res.status(200).send({success:true, message:"company deleted"})

      }catch(error){
      res.status(500).send({success:false, message:"server crashed"})
        
      }
  }



  const searchCompany = async(req,res)=>{
    let obj = {}
    try{

    //  let {companyName,location,city,founded}= req.query;
     let {companyName,location,city,founded}= req.params;
     if(companyName){
       obj.companyName = companyName
      }
      if(location){
        obj.location = location
      }
      if(city){
        obj.city = city
      }
      if(founded){
        obj.founded = founded
      }
      
    let company = await companyModel.find(obj)
     if(company.length==0){res.status(404).send({success:false,message:"No company found"})}
     res.status(200).send({success:true,message:"All result",Total:company.length,data:company})
    }
    catch{

      res.status(500).send({success:false,message:"Server Crashed"})
    }
  }
module.exports = { createcompany, companylist, singleCompany1,deleteCompany,searchCompany };
